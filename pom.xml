<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-dependencies</artifactId>
        <version>3.18.7</version>
    </parent>


    <groupId>org.apache.camel.quarkus</groupId>
    <artifactId>camel-quarkus-migration-tests</artifactId>
    <version>3.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>Camel :: Quarkus :: Migration :: Tests</name>
    <description>Project with tests for quarkus-updates</description>

    <properties>
        <maven.compiler.release>17</maven.compiler.release>

        <quarkus-updates.version>1.0.4-SNAPSHOT</quarkus-updates.version>

        <!-- Make sure all these versions are aligned and use a compatible OpenRewrite version -->
        <!--   https://central.sonatype.com/artifact/org.openrewrite.recipe/rewrite-recipe-bom/2.0.3/versions -->
        <rewrite-recipe-bom.version>1.19.4</rewrite-recipe-bom.version>
        <!--   https://central.sonatype.com/artifact/org.openrewrite.maven/rewrite-maven-plugin/5.2.4/versions -->
        <rewrite-maven-plugin.version>4.46.0</rewrite-maven-plugin.version>
        <!--   for now, we don't know where to find compatibility information for the Gradle plugin -->
        <rewrite-gradle-plugin.version>5.40.6</rewrite-gradle-plugin.version>

        <!-- tests-->
        <junit.version>5.4.0</junit.version>
        <surefire.plugin.version>3.1.0</surefire.plugin.version>
        <!-- Camel dependencies used by the tests -->
        <camel.version>3.18.7</camel.version>
        <!-- Http version used by the tests -->
        <http.version>4.5.14</http.version>

        <lombok.version>1.18.28</lombok.version>

        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <license-maven-plugin.version>4.2</license-maven-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.openrewrite.recipe</groupId>
                <artifactId>rewrite-recipe-bom</artifactId>
                <version>${rewrite-recipe-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- rewrite-java dependencies only necessary for Java Recipe development -->
        <dependency>
            <groupId>org.openrewrite</groupId>
            <artifactId>rewrite-java</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <artifactId>antlr-runtime</artifactId>
                    <groupId>org.antlr</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>javax.json</artifactId>
                    <groupId>org.glassfish</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- You only need the version that corresponds to your current
        Java version. It is fine to add all of them, though, as
        they can coexist on a classpath. -->
        <dependency>
            <groupId>org.openrewrite</groupId>
            <artifactId>rewrite-java-8</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.openrewrite</groupId>
            <artifactId>rewrite-java-11</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.openrewrite</groupId>
            <artifactId>rewrite-java-17</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- rewrite-maven dependency only necessary for Maven Recipe development -->
        <dependency>
            <groupId>org.openrewrite</groupId>
            <artifactId>rewrite-maven</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- rewrite-yaml dependency only necessary for Yaml Recipe development -->
        <dependency>
            <groupId>org.openrewrite</groupId>
            <artifactId>rewrite-yaml</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- rewrite-properties dependency only necessary for Properties Recipe development -->
        <dependency>
            <groupId>org.openrewrite</groupId>
            <artifactId>rewrite-properties</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- rewrite-xml dependency only necessary for XML Recipe development -->
        <dependency>
            <groupId>org.openrewrite</groupId>
            <artifactId>rewrite-xml</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- rewrite-maven dependency is required for pom.xml recipe testing -->
        <dependency>
            <groupId>org.openrewrite</groupId>
            <artifactId>rewrite-maven</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- lombok is optional, but recommended for authoring recipes -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <optional>true</optional>
        </dependency>

        <!-- recipes -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-update-recipes</artifactId>
            <version>${quarkus-updates.version}</version>
        </dependency>

        <!-- For authoring tests for any kind of Recipe -->
        <dependency>
            <groupId>org.openrewrite</groupId>
            <artifactId>rewrite-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-api</artifactId>
            <version>${camel.version}</version>
            <scope>test</scope>
        </dependency>

        <!--test dependencies -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core-model</artifactId>
            <version>${camel.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-support</artifactId>
            <version>${camel.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-catalog</artifactId>
            <version>${camel.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-main</artifactId>
            <version>${camel.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-activemq</artifactId>
            <version>${camel.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-bean</artifactId>
            <version>${camel.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${http.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources-filtered</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <configuration>
                    <propertiesEncoding>UTF-8</propertiesEncoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <configuration>
                    <flattenMode>oss</flattenMode>
                </configuration>
                <executions>
                    <!-- enable flattening -->
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <!-- ensure proper cleanup -->
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>15</source>
                    <target>15</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-api</artifactId>
                        <version>${surefire.plugin.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <systemPropertyVariables>
                        <maven.repo.local>${settings.localRepository}</maven.repo.local>
                        <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${license-maven-plugin.version}</version>
                <configuration>
                    <failIfUnknown>true</failIfUnknown>
                    <header>header.txt</header>
                    <excludes>
                        <exclude>**/*.adoc</exclude>
                    </excludes>
                    <mapping>
                        <cli>CAMEL_PROPERTIES_STYLE</cli>
                        <ds>SLASHSTAR_STYLE</ds>
                        <groovy>SLASHSTAR_STYLE</groovy>
                        <java>SLASHSTAR_STYLE</java>
                        <jaxb.index>CAMEL_PROPERTIES_STYLE</jaxb.index>
                        <Jenkinsfile>SLASHSTAR_STYLE</Jenkinsfile>
                        <Jenkinsfile.quarkus>SLASHSTAR_STYLE</Jenkinsfile.quarkus>
                        <Jenkinsfile.sonarcloud>SLASHSTAR_STYLE</Jenkinsfile.sonarcloud>
                        <jsh>SLASHSTAR_STYLE</jsh>
                        <mjs>SLASHSTAR_STYLE</mjs>
                        <properties>CAMEL_PROPERTIES_STYLE</properties>
                        <rnc>SCRIPT_STYLE</rnc>
                        <ini>SCRIPT_STYLE</ini>
                        <rng>XML_STYLE</rng>
                        <spring.factories>CAMEL_PROPERTIES_STYLE</spring.factories>
                        <spring.provides>CAMEL_PROPERTIES_STYLE</spring.provides>
                        <tm>CAMEL_PROPERTIES_STYLE</tm>
                        <kt>SLASHSTAR_STYLE</kt>
                        <wsdl>XML_STYLE</wsdl>
                    </mapping>
                    <headerDefinitions>
                        <headerDefinition>license-properties-headerdefinition.xml</headerDefinition>
                    </headerDefinitions>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.camel</groupId>
                        <artifactId>camel-buildtools</artifactId>
                        <version>${camel.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <profiles>

        <profile>
            <!-- Sanity checks and formatting are disabled when building with '-Dquickly' -->
            <id>full</id>
            <activation>
                <property>
                    <name>!quickly</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>net.revelc.code.formatter</groupId>
                        <artifactId>formatter-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>format</id>
                                <goals>
                                    <goal>format</goal>
                                </goals>
                                <phase>process-sources</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.revelc.code</groupId>
                        <artifactId>impsort-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sort-imports</id>
                                <goals>
                                    <goal>sort</goal>
                                </goals>
                                <phase>process-sources</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-test</id>
                                <phase>test</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>format</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.mycila</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>license-format</id>
                                <goals>
                                    <goal>format</goal>
                                </goals>
                                <phase>validate</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>